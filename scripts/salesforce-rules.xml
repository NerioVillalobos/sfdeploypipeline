<?xml version="1.0"?>

<pmd version="6.41.0" xmlns="http://pmd.sourceforge.net/rules"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://pmd.sourceforge.net/rules
                         https://pmd.sourceforge.io/pmd-6.41.0.xsd">

    <rule name="AvoidHardcodingId"
          language="apex"
          message="Avoid hardcoding Salesforce Ids in Apex classes or triggers"
          class="net.sourceforge.pmd.lang.rule.XPathRule">
        <description>It is best practice to avoid hardcoding Salesforce Ids in Apex code to prevent issues during migrations or deployments.</description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>//StringLiteral[starts-with(., '00') and string-length(.) = 15]</value>
            </property>
        </properties>
    </rule>

    <rule name="AvoidSOQLInjection"
          language="apex"
          message="Avoid SOQL Injection in Apex code"
          class="net.sourceforge.pmd.lang.rule.XPathRule">
        <description>Always use Apex bind variables when constructing SOQL queries to prevent SQL injection vulnerabilities.</description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>//MethodCall[Name[@Image='query'] and ArgumentList/Expression[starts-with(., '\"SELECT')]]</value>
            </property>
        </properties>
    </rule>

    <rule name="AvoidInlineJavaScript"
          language="visualforce"
          message="Avoid inline JavaScript in Visualforce pages"
          class="net.sourceforge.pmd.lang.rule.XPathRule">
        <description>Inline JavaScript in Visualforce pages can lead to security vulnerabilities and is considered a bad practice.</description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>//Element[@Name='script' and starts-with(@Literal, 'javascript:')]</value>
            </property>
        </properties>
    </rule>

</pmd>
